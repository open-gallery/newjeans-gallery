# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Deploy

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Repository 체크아웃
        uses: actions/checkout@v3
        
      - name: JDK 셋업
        uses: actions/setup-java@v3.10.0
        with:
          java-version: '11'
          distribution: 'corretto'
          
      - name: gradle 셋업
        uses: gradle/gradle-build-action@v2.4.0
        with:
          gradle-version: current

      - name: gradlew 권한 수정
        run: chmod +x ./gradlew

      - name: 테스트
        run: ./gradlew test

      - name: 빌드
        run: ./gradlew build -x test
        
      - name: 시간 추출
        run: echo "TIME=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
        
      - name: ...
        run: echo $TIME

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v2
      
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Docker Hub 로그인
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#       - name: Build and push
#         id: docker_build
#         uses: docker/build-push-action@v4
#         with:
#           context: ./
#           file: ./Dockerfile
#           push: true
#           tags:  ${{ secrets.DOCKER_HUB_USERNAME }}/open-gallery:${{ steps.tag_version.outputs.new_tag }}
#           cache-from: type=local,src=/tmp/.buildx-cache
#           cache-to: type=local,dest=/tmp/.buildx-cache-new

#       - name: Image digest
#         run: echo ${{ steps.docker_build.outputs.digest }}
